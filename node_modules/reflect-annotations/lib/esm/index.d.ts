import { getAnnotations, setAnnotations, getParameterAnnotations, setParameterAnnotations, createAnnotationFactory, Annotation, isAnnotationFactory, Constructor, AnnotationFactory } from './annotations.js';
interface AnnotatedPropertyDescription {
    name: string;
    classAnnotations: Array<any>;
    methodAnnotations: Array<any>;
    parameterAnnotations: Array<any>;
    types: {
        parameters?: any[];
        return?: any;
    };
    declaredOrder: boolean;
}
declare function reflectAnnotations<T = any>(source: Constructor<T>, options?: {
    declaredOrder: boolean;
}): AnnotatedPropertyDescription[];
export default reflectAnnotations;
export { reflectAnnotations, AnnotatedPropertyDescription, Annotation };
export { getAnnotations, setAnnotations, getParameterAnnotations, setParameterAnnotations, createAnnotationFactory, isAnnotationFactory, AnnotationFactory, };
